apiVersion: apps/v1
kind: Deployment
metadata:
  name: go-ks-app
  namespace: kubesimplify-go
  labels:
    app: go-ks-app
spec:
  replicas: 2 
  selector:
    matchLabels:
      app: go-ks-app
  template:
    metadata:
      labels:
        app: go-ks-app
    spec:
      containers:
      - name: go-ks-app
        image: docker.io/kanukhosla10/go-kubesimplify:amd64
        imagePullPolicy: Always
        env:
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: postgresql-credentials
              key: username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgresql-credentials
              key: password
        - name: DB_HOST
          value: my-postgresql-rw.default.svc.cluster.local
        - name: DB_PORT
          value: "5432"
        - name: DB_NAME
          value: goals_database
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 20
        resources:
          requests:
            memory: "350Mi"
            cpu: "250m"
          limits:
            memory: "500Mi"
            cpu: "500m"
---
apiVersion: v1
kind: Service
metadata:
  name: go-ks-app-service
  namespace: kubesimplify-go
  labels:
    app: go-ks-app
spec:
  selector:
    app: go-ks-app
  ports:
    - protocol: TCP
      name: http
      port: 80
      targetPort: 8080
  type: ClusterIP
---
apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
  name: app-gateway
  namespace: default
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  gatewayClassName: nginx
  listeners:
  - name: http
    port: 80
    protocol: HTTP
    hostname: "go-ks.654537853.xyz"
  - name: https
    hostname: "go-ks.654537853.xyz"
    port: 443
    protocol: HTTPS
    allowedRoutes:
      namespaces:
        from: All
    tls:
      mode: Terminate
      certificateRefs:
      - name: app-go-ks-tls #ks is kubesimplify
        kind: Secret
        group: ""
  - name: argo-http
    port: 80
    protocol: HTTP
    hostname: "argo-ks.654537853.xyz" #ks is kubesimplify
  - name: argo-https
    hostname: "argo-ks.654537853.xyz" #ks is kubesimplify
    port: 443
    protocol: HTTPS
    allowedRoutes:
      namespaces:
        from: All
    tls:
      mode: Terminate
      certificateRefs:
      - name: argo-go-ks-tls #ks is kubesimplify
        kind: Secret
        group: ""

---
apiVersion: gateway.networking.k8s.io/v1beta1
kind: HTTPRoute
metadata:
  name: go-app-route
spec:
  parentRefs:
  - name: app-gateway
    namespace: default
  hostnames:
  - "go-ks.654537853.xyz" #ks is kubesimplify
  rules:
  - matches:
    - path:
        type: PathPrefix
        value: /
    backendRefs:
    - name: go-ks-app-service
      port: 80
